<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Myoung</title>
  <icon>https://www.gravatar.com/avatar/e9263d21c017d0b526a95e0a61c082a7</icon>
  <subtitle>记录想法 记录生活</subtitle>
  <link href="http://myoungle.top/atom.xml" rel="self"/>
  
  <link href="http://myoungle.top/"/>
  <updated>2023-10-29T16:15:13.436Z</updated>
  <id>http://myoungle.top/</id>
  
  <author>
    <name>Myoung</name>
    <email>yanglele121@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://myoungle.top/posts/4a17b156.html"/>
    <id>http://myoungle.top/posts/4a17b156.html</id>
    <published>2023-10-29T16:15:13.436Z</published>
    <updated>2023-10-29T16:15:13.436Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://myoungle.top/posts/0.html"/>
    <id>http://myoungle.top/posts/0.html</id>
    <published>2023-10-29T16:15:13.436Z</published>
    <updated>2023-10-29T16:15:13.436Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搜索与图论">搜索与图论</h2><h2 id="DFS">DFS</h2><blockquote><p>深度优先搜索，一种执着的搜索方法，只有将一条路径走完才回去搜索其他路径。<br>递归或者栈实现</p></blockquote><ol><li><h3 id="全排列">全排列</h3></li></ol><p>原题来源：【AcWing 842】排列数字</p><p>解题思路：使用数字去填补空位，直至空位被填完，说明找到一个可行答案</p><p>Code</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> path[N+<span class="number">1</span>];</span><br><span class="line"><span class="type">bool</span> visited[N+<span class="number">1</span>];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==n)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;n; i ++ )<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,path[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!visited[i])&#123;</span><br><span class="line">            visited[i]=<span class="literal">true</span>;</span><br><span class="line">            path[u]=i;</span><br><span class="line">            <span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line">            visited[i]=<span class="literal">false</span>;    <span class="comment">//还原现场，不影响其他路径</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><h3 id="n-皇后问题">n-皇后问题</h3></li></ol><p>原题来源：【AcWing 843】n-皇后问题</p><p>解题思路：已知每行有且仅有一个皇后。因此只需要考虑在当前行的某一列放置皇后可以满足要求。</p><p>Code</p><blockquote><p>col[N]数组表示第i列是否存在过皇后，dg[N]表示（r,i）所在的正对角线是否存在皇后,udg[N]表示（r,i）所在的反对角线是否存在皇后。</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">20</span>;</span><br><span class="line"><span class="type">char</span> g[N][N];</span><br><span class="line"><span class="type">bool</span> col[N],dg[N],udg[N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(r==n)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )<span class="built_in">puts</span>(g[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )&#123;</span><br><span class="line">        <span class="keyword">if</span>(!col[i]&amp;&amp;!dg[r+i]&amp;&amp;!udg[n-r+i])&#123;</span><br><span class="line">            g[r][i]=<span class="string">&#x27;Q&#x27;</span>;</span><br><span class="line">            col[i]=dg[r+i]=udg[n-r+i]=<span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">dfs</span>(r+<span class="number">1</span>);</span><br><span class="line">            g[r][i]=<span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">            col[i]=dg[r+i]=udg[n-r+i]=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j ++ )</span><br><span class="line">        g[i][j]=<span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BFS">BFS</h2><blockquote><p>bfs是一种层次搜索方法，逐层搜索答案<br>由队列实现</p></blockquote><ol><li><h3 id="走迷宫">走迷宫</h3></li></ol><p>原题来源：【AcWing 844】走迷宫</p><p>解题思路：从距离起点最近的几个点开始，直至走到终点</p><p>Code</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> g[N][N],d[N][N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m,hh,tt=<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">PII q[N*N];<span class="comment">//队列的长度为N*M</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    q[++tt]=&#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    d[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(hh&lt;=tt)&#123;</span><br><span class="line">        <span class="keyword">auto</span> cur=q[hh++];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="type">int</span> x=cur.first+dx[i],y=cur.second+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(x&gt;=<span class="number">0</span>&amp;&amp;x&lt;n&amp;&amp;y&gt;=<span class="number">0</span>&amp;&amp;y&lt;m&amp;&amp;g[x][y]==<span class="number">0</span>&amp;&amp;d[x][y]==<span class="number">-1</span>)&#123;</span><br><span class="line">                q[++tt]=&#123;x,y&#125;;</span><br><span class="line">                d[x][y]=d[cur.first][cur.second]+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d[n<span class="number">-1</span>][m<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(d,<span class="number">-1</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j ++ )</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;g[i][j]);</span><br><span class="line">    cout&lt;&lt;<span class="built_in">bfs</span>()&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><h3 id="8数码问题">8数码问题</h3></li></ol><p>原题来源：【AcWing 845】8数码问题</p><p>解题思路：该问题的难点有两个，一个是状态表示，另一个是状态转换。</p><p>状态表示：用字符串来表示每次变化后的状态，同时使用哈希表代替visited数组查看某一状态是否已经遍历过。</p><p>状态转换：每次都是‘x’与其他字符交换位置，因此状态的变化就是‘x’交换位置的过程</p><p>Code</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,dy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line">unordered_map&lt;string, <span class="type">int</span>&gt;ump;</span><br><span class="line">queue&lt;string&gt;q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">(string start)</span></span>&#123;</span><br><span class="line">    string end=<span class="string">&quot;12345678x&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    ump[start]=<span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>(start);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        <span class="keyword">auto</span> t=q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> distance=ump[t];</span><br><span class="line">        <span class="keyword">if</span>(t==end)<span class="keyword">return</span> distance;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> loc=t.<span class="built_in">find</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">        <span class="type">int</span> x=loc/<span class="number">3</span>,y=loc%<span class="number">3</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="type">int</span> a=x+dx[i],b=y+dy[i];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(a&gt;=<span class="number">0</span>&amp;&amp;a&lt;<span class="number">3</span>&amp;&amp;b&gt;=<span class="number">0</span>&amp;&amp;b&lt;<span class="number">3</span>)&#123;</span><br><span class="line">                </span><br><span class="line">                <span class="built_in">swap</span>(t[loc],t[a*<span class="number">3</span>+b]);</span><br><span class="line">                <span class="keyword">if</span>(!ump.<span class="built_in">count</span>(t))&#123;</span><br><span class="line">                    ump[t]=distance+<span class="number">1</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>(t);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">swap</span>(t[loc],t[a*<span class="number">3</span>+b]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string start;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i ++ )&#123;</span><br><span class="line">        cin&gt;&gt;c;</span><br><span class="line">        start+=c;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">bfs</span>(start)&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;搜索与图论&quot;&gt;搜索与图论&lt;/h2&gt;
&lt;h2 id=&quot;DFS&quot;&gt;DFS&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;深度优先搜索，一种执着的搜索方法，只有将一条路径走完才回去搜索其他路径。&lt;br&gt;
递归或者栈实现&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo页面文章页配置</title>
    <link href="http://myoungle.top/posts/7adfc239.html"/>
    <id>http://myoungle.top/posts/7adfc239.html</id>
    <published>2023-10-29T11:21:59.000Z</published>
    <updated>2023-10-29T16:15:13.436Z</updated>
    
    <content type="html"><![CDATA[<h1>页面配置📦</h1><h2 id="🧱-Front-matter-的基本认识">🧱 Front-matter 的基本认识</h2><p><code>Front-matter</code> 是 <code>markdown</code> 文件最上方以 <code>---</code> 分隔的区域，用于指定个别档案的变数。其中又分为两种 markdown 里</p><ol><li>Page Front-matter 用于页面配置</li><li>Post Front-matter 用于文章页配置</li></ol><p>TIP</p><p>如果标注可选的参数，可根据自己需要添加，不用全部都写在 markdown 里</p><h2 id="Page-Front-matter">Page Front-matter</h2><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】页面标题</td></tr><tr><td>date</td><td>【必需】页面创建日期</td></tr><tr><td>type</td><td>【必需】标签、分类、关于、音乐馆、友情链接、相册、相册详情、朋友圈、即刻页面需要配置</td></tr><tr><td>updated</td><td>【可选】页面更新日期</td></tr><tr><td>description</td><td>【可选】页面描述</td></tr><tr><td>keywords</td><td>【可选】页面关键字</td></tr><tr><td>comments</td><td>【可选】显示页面评论模块(默认 true)</td></tr><tr><td>top_img</td><td>【可选】页面顶部图片</td></tr><tr><td>mathjax</td><td>【可选】显示 mathjax(当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示 katex(当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的音乐 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true/false)(默认为设置中 highlight_shrink 的配置)</td></tr><tr><td>top_single_background</td><td>【可选】部分页面的顶部模块背景图片</td></tr></tbody></table><h2 id="Post-Front-matter">Post Front-matter</h2><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】文章标题</td></tr><tr><td>date</td><td>【必需】文章创建日期</td></tr><tr><td>updated</td><td>【可选】文章更新日期</td></tr><tr><td>tags</td><td>【可选】文章标签</td></tr><tr><td>categories</td><td>【可选】文章分类</td></tr><tr><td>keywords</td><td>【可选】文章关键字</td></tr><tr><td>description</td><td>【可选】文章描述</td></tr><tr><td>top_img</td><td>【可选】文章顶部图片</td></tr><tr><td>cover</td><td>【可选】文章缩略图(如果没有设置 top_img,文章页顶部将显示缩略图，可设为 false/图片地址/留空)</td></tr><tr><td>comments</td><td>【可选】显示文章评论模块(默认 true)</td></tr><tr><td>toc</td><td>【可选】显示文章 TOC(默认为设置中 toc 的 enable 配置)</td></tr><tr><td>toc_number</td><td>【可选】显示 toc_number(默认为设置中 toc 的 number 配置)</td></tr><tr><td>toc_style_simple</td><td>【可选】显示 toc 简洁模式</td></tr><tr><td>copyright</td><td>【可选】显示文章版权模块(默认为设置中 post_copyright 的 enable 配置)</td></tr><tr><td>copyright_author</td><td>【可选】文章版权模块的 <code>文章作者</code></td></tr><tr><td>copyright_author_href</td><td>【可选】文章版权模块的 <code>文章作者</code>链接</td></tr><tr><td>copyright_url</td><td>【可选】文章版权模块的 <code>文章链接</code>链接</td></tr><tr><td>copyright_info</td><td>【可选】文章版权模块的版权声明文字</td></tr><tr><td>mathjax</td><td>【可选】显示 mathjax(当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示 katex(当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的 <code>音乐</code> 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true/false)(默认为设置中 highlight_shrink 的配置)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>swiper_index</td><td>【可选】首页轮播图配置 index 索引，数字越小越靠前</td></tr><tr><td>top_group_index</td><td>【可选】首页右侧卡片组配置, 数字越小越靠前</td></tr><tr><td>ai</td><td>【可选】文章ai摘要</td></tr><tr><td>main_color</td><td>【可选】文章主色，必须是16进制颜色且有6位，不可缩减，例如#ffffff 不可写成#fff</td></tr></tbody></table><ol><li>首页轮播图配置: <code>swiper_index</code>, 数字越小越靠前</li><li>首页卡片配置: <code>top_group_index</code>, 数字越小越靠前</li><li>page 中 <code>top_single_background</code>, 可配置部分页面的顶部背景图片</li></ol><p>TIP</p><p>只需要在你的文章顶部的 <code>Front-matter</code>配置这 <code>swiper_index</code>和 <code>top_group_index</code>两个字段即可显示轮播图和推荐卡片</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <summary type="html">hexo博客文章中的各个配置参数以及各页面单独配置办法</summary>
    
    
    
    <category term="hexo笔记" scheme="http://myoungle.top/categories/hexo%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="hexo" scheme="http://myoungle.top/tags/hexo/"/>
    
    <category term="页面配置" scheme="http://myoungle.top/tags/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>保研文书准备</title>
    <link href="http://myoungle.top/posts/5d2c3619.html"/>
    <id>http://myoungle.top/posts/5d2c3619.html</id>
    <published>2023-10-28T21:05:29.000Z</published>
    <updated>2023-10-29T16:15:13.436Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/spoiler.css&quot; type=&quot;text/css&quot;&gt;&lt;script src=&quot;/js/spoiler.js&quot; type=&quot;text/javascript&quot; async&gt;&lt;/script&gt;</summary>
      
    
    
    
    
    <category term="保研" scheme="http://myoungle.top/tags/%E4%BF%9D%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>江南大学-&gt;哈尔滨工业大学</title>
    <link href="http://myoungle.top/posts/b048d48.html"/>
    <id>http://myoungle.top/posts/b048d48.html</id>
    <published>2023-10-28T20:46:05.000Z</published>
    <updated>2023-10-29T16:15:13.436Z</updated>
    
    <content type="html"><![CDATA[<h1>个人BG</h1><ul><li>学校：江苏某中下211</li><li>专业：数字媒体技术</li><li>专业排名（rk）：13%</li><li>科研经历：一段国家级大创，产出一篇论文（在投，二作）</li><li>竞赛经历：几个水奖（特别水）</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;个人BG&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;学校：江苏某中下211&lt;/li&gt;
&lt;li&gt;专业：数字媒体技术&lt;/li&gt;
&lt;li&gt;专业排名（rk）：13%&lt;/li&gt;
&lt;li&gt;科研经历：一段国家级大创，产出一篇论文（在投，二作）&lt;/li&gt;
&lt;li&gt;竞赛经历：几个水奖（特别水）&lt;/li&gt;</summary>
      
    
    
    
    <category term="大学生涯" scheme="http://myoungle.top/categories/%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%B6%AF/"/>
    
    
    <category term="保研" scheme="http://myoungle.top/tags/%E4%BF%9D%E7%A0%94/"/>
    
    <category term="大学" scheme="http://myoungle.top/tags/%E5%A4%A7%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客文章格式</title>
    <link href="http://myoungle.top/posts/4488a44e.html"/>
    <id>http://myoungle.top/posts/4488a44e.html</id>
    <published>2023-10-27T21:51:08.000Z</published>
    <updated>2023-10-29T16:15:13.436Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://s36d4b93t.sabkt.gdipper.com/blog/src%3Dhttp___5b0988e595225.cdn.sohucs.com_images_20181224_d9c86e01e4fb44309af33640a4b28d48.jpeg%26refer%3Dhttp___5b0988e595225.cdn.sohucs.jpg" alt="img"></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;http://s36d4b93t.sabkt.gdipper.com/blog/src%3Dhttp___5b0988e595225.cdn.sohucs.com_images_20181224_d9c86e01e4fb44309af33640a4b28</summary>
      
    
    
    
    <category term="blog" scheme="http://myoungle.top/categories/blog/"/>
    
    
    <category term="hexo" scheme="http://myoungle.top/tags/hexo/"/>
    
  </entry>
  
</feed>
